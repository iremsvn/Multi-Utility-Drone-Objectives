#connecting to the drone and reading altitude  when the the speed of X direction is greater than Y and Z combined  
# then if the altitude is less than 1000 you start streaming and wait for 10 seconds. else you just take a photo 

while(true){
    if (  ReadSpeedX() > ReadSpeedY() + ReadSpeedZ()   ){
        float altitude = readAltitude();
        if ( altitude <  1000 ){
            TurnOnCamera();
            Wait(10.0);
        }
        else{ 
            TakePicture();
        }
    }
}



#now in this example we will calculate the velocity loss due to friction of air from our drone with a function declaration.
#then print it with a neverending loop


function calculateVelocityLoss(){
    SetSpeed( 10 , 10 , 10 ); #special function which sets the speed
    float lossX = 10 - ReadSpeedX();
    float lossY = 10 - ReadSpeedY();
    float lossZ = 10 - ReadSpeedZ();
    return ( (lossX ^ 2 + lossY ^ 2 + lossZ ^ 2 ) ^ (1/2) );
}

Connect();
while(true){
    log( calculateVelocityLoss() );
}



#This example is an illustration of keeping  the velocity stable

function keepVelocity(x, y, z)
{
 isKeep() = true;
 a = x;
 b= y;
 c= z

 while(isKeep)
 {
  if(x != a||y!=b||z!=c)
  {
   isKeep = false;
  };		
 };

 log("The drone couldn't keep its speed stabile");
};


#the device will operate as long as it is connected

while(!Disconnect())
{
 log("The device has been started and connected for usage.");

 rise(40);
 setSpeed(5,5,5);
 x_Speed = ReadSpeedX();
 y_Speed = ReadSpeedY();
 z_Speed = ReadSpeedZ();
	
 keepVelocity(x_speed, y_Speed, z_Speed);
 Land();
		
};

 log("The device disconnected and will return automatically.");





#This example program allows reaching a destination by following a curve.
#The aim here is to save a video with some movements.
#Thus, it is an example of how we can shot artistic videos via the drone

SetSpeedY(10);
Rise(1.5);
TurnOnCamera();
SetSpeedZ(5.0);
MoveForward(10);
StartVideo();
StartTimer();

while(ReadFromTimer() < 10.0){

 while(ReadAltitude <= 500.0){

  FollowCurve("y = x ^ 2");
  if(ReadLocation() == "39° 52' 30.9900''"){

    log("Reached to Bilkent University");		
  };									
 };

SetSpeed(0);
SetSpeed(2);
RotateLeft(360);	
RotateRight(360);

};

StopTimer();
StopVideo();

if(SaveMedia() == true){
 log("video saved");
}
else{
 log("storage accessed");
};

TurnOffCamera();
Disconnect();




#This program is just made for entertainment.
#İt first takes a picture from different directions.
#Then it flies circular while video streaming. 

if(ReadBattery() > 20){
  log("low battery");
}
else{
 StartTimer();
 for(int i = 0; i <= 5; i++){
   Rise(0.5);
   TakePicture();	
   SaveMedia();
   Wait(5);

   MoveRight(1);
   Wait(5);

   TakePicture();	
   SaveMedia();
   MoveLeft(2);
   Wait(5);

   TakePicture();	
   SaveMedia();
 };

  SetSpeedX(10);
  SetSpeedY(10);
  TurnOnCamera();

  while(ReadTimer() >= 3.0){
    FollowCurve("36 = y ^ 2 + x ^ 2");
  };

StopTimer();
TurnOffCamera();
};

Disconnect();



